@page "/project/viewproject/{id}"
@inject IProjectService ProjectService
@inject NavigationManager navManager
@inject TimeKeep.Client.Shared.PageHistoryState PageHistoryState

<h1>View Project</h1>
<br/>

<table class="table col-md-6">
    <tbody>
        <tr>
            <th scope="row">Id</th>
            <td>@project.Id</td>
        </tr>
        <tr>
            <th scope="row">Name</th>
            <td>@project.Name</td>
        </tr>
        <tr>
            <th scope="row">Description</th>
            <td>@project.Description</td>
        </tr>
         <tr>
            <th scope="row">Assignee</th>
            @if (project.Assignee != null)
            {
                            <td> @project.Assignee.FirstName @project.Assignee.LastName</td>
            }
            else
            {
                            <td>Not Yet</td>
            }
        </tr>
    </tbody>
</table>

<hr />
<h3>Time Track</h3>
<hr />
<table class="table">
    <thead class="thead-light">
        <tr>
            <th>Date</th>
            <th>Hours</th>
            <th>Receipt</th>
        </tr>
    </thead>
    <tbody>
        @if (project.Tracks != null)
        {
            @foreach (var working in project.Tracks)
        {
            <tr>
                <td>@working.Date</td>
                <td>@working.Hours</td>
                <td>@working.Receipt</td>
            </tr>
        }
        }
    </tbody>
</table>

<div class="form-group">
    @if (PageHistoryState.CanGoBack()){
        <NavLink href="@PageHistoryState.GetGoBackPage()" class="btn btn-link">Back</NavLink>
    }
    else{
        <NavLink href="/project/1" class="btn btn-link">Back</NavLink>
    }
</div>

@code {
    [Parameter]
    public string Id { get; set; }

    Project project = new Project
    {
            Name = "",
            Description = "",
    };
    
    protected async override Task OnParametersSetAsync()
    {
       project = await ProjectService.GetProject(int.Parse(Id));
    }
}